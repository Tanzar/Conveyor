(function(e,i){typeof exports=="object"&&typeof module<"u"?i(exports,require("@laravel/echo-vue"),require("laravel-echo")):typeof define=="function"&&define.amd?define(["exports","@laravel/echo-vue","laravel-echo"],i):(e=typeof globalThis<"u"?globalThis:e||self,i(e.Conveyor={},e["@laravel/echo-vue"],e["laravel-echo"]))})(this,function(e,i,s){"use strict";function c(n,o){if(typeof n!="string")throw new Error("Conveyor error: key must be string");if(typeof o!="object")throw new Error("Conveyor error: params must be object");let r="conveyor."+n+"-";return Object.keys(o).forEach(t=>{r+=t+"="+o[t]+";"}),r}class f{#e;#o=!1;constructor(o,r,t){this.#e=c(o,r),typeof t=="function"?(s.private(this.#e).listen(".conveyor.updated",u=>{t(u.data)}),this.#o=!0):console.log("Conveyor error: handle must be function")}destroyed(){this.#o&&s.leave(this.#e)}}function v(n,o,r){return new f(n,o,r)}function l(n,o,r){let t=c(n,o);i.useEcho(t,".conveyor.updated",u=>{r(u.data)})}e.newConveyor=v,e.useConveyor=l,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});
